       CBL CICS('COBOL3') APOST
      *-------------------------------------------------------------  *
      *
      *  MODULE NAME = CTLGAPIX
      *
      *  DESCRIPTIVE NAME = CICS TS  (Samples) Example Application -
      *                     Catalog Manager Program
      *
      *  TRANSACTION NAME = ktlx
      *
      *  FUNCTION =
      *  execute an API request from catalog manager sample system
      *  passing the ITEM number and receiving details from product
      *  Execute using a clear screen in CICS puting transaction name
      *  and Itemid(numeric 3 pos) like "KTLG010"
      *
      *  NOTICE
      *  An API may has several services the CATALOG this COBOL CODE
      *  cover only the "single Item" service. Is necessary select the
      *  correct language structures from files generated by zconbt
      *
      *  2020/06/25 - first version
      *
      *  By Valter Siqueira, IBM Brazil.
      *     valters@br.ibm.com
      *-------------------------------------------------------------  *
       IDENTIFICATION DIVISION.
       PROGRAM-ID. CTLGAPIX.
       ENVIRONMENT DIVISION.
       CONFIGURATION SECTION.
       DATA DIVISION.
       WORKING-STORAGE SECTION.
      *----------------------------------------------------------------*
      * Work area                                                     *
      *----------------------------------------------------------------*
        01 wk-work.
           03 wk-receive-length        pic s9(4) comp value 255.
           03 wk-receive.
              05 filler                pic x(004).
              05 wk-screen-str         pic x(003).
              05 filler                pic x(248).

      *---------------------------------------------------------------
      *---------------------------------------------------------------
      * insert the structure language from API/Service generated by
      * 'zconbt' utility after " 01 API-INFO
      *
      * CAUTION: the API information content are case sensitive if you
      *          modify the API may be not found on execution time
      *
      * Standard name "APIxxIxx"
      *---------------------------------------------------------------

       01 API-INFO.
=========> insert APIxxIxx HERE!

      *---------------------------------------------------------------
      * inster the structure language from API/Service generated by
      * 'zconbt' utility after " 01 REQUEST
      * Nome padrao gerado "APIxxQxx"
      *---------------------------------------------------------------

       01 REQUEST.
=========> insert APIxxQxx HERE!

      *---------------------------------------------------------------
      * Inserir o Book de "response" da API gerado pelo utilitario
      * 'zconbt' abaixo do nivel "01 RESPONSE"
      * Nome padrao gerado "APIxxPxx"
      *---------------------------------------------------------------

       01 RESPONSE.
=========> insert APIxxPxx HERE!

      *--------------------------------------------------------------
      * Estructure language for STUB comunication execution
      *
      * CAUTION: values and lengths are STUB standards and should not
      *          been modified.
      * Note: The best practice is keep the these Language Structures
      *       in a copybook library.
      *
      *--------------------------------------------------------------
       01  BAQ-REQUEST-INFO.
         03 BAQ-REQUEST-INFO-COMP-LEVEL  PIC S9(9) COMP-5 SYNC VALUE 2.
         03 BAQ-REQUEST-INFO-USER.
            05 BAQ-OAUTH.
               07 BAQ-OAUTH-USERNAME           PIC X(256).
               07 BAQ-OAUTH-USERNAME-LEN       PIC S9(9) COMP-5 SYNC
                                                 VALUE 0.
               07 BAQ-OAUTH-PASSWORD           PIC X(256).
               07 BAQ-OAUTH-PASSWORD-LEN       PIC S9(9) COMP-5 SYNC
                                                 VALUE 0.
               07 BAQ-OAUTH-CLIENTID           PIC X(256).
               07 BAQ-OAUTH-CLIENTID-LEN       PIC S9(9) COMP-5 SYNC
                                                 VALUE 0.
               07 BAQ-OAUTH-CLIENT-SECRET      PIC X(256).
               07 BAQ-OAUTH-CLIENT-SECRET-LEN  PIC S9(9) COMP-5 SYNC
                                                 VALUE 0.
               07 BAQ-OAUTH-SCOPE-PTR          USAGE POINTER.
               07 BAQ-OAUTH-SCOPE-LEN          PIC S9(9) COMP-5 SYNC
                                                 VALUE 0.
            05 BAQ-AUTHTOKEN.
               07 BAQ-TOKEN-USERNAME           PIC X(256).
               07 BAQ-TOKEN-USERNAME-LEN       PIC S9(9) COMP-5 SYNC
                                                 VALUE 0.
               07 BAQ-TOKEN-PASSWORD           PIC X(256).
               07 BAQ-TOKEN-PASSWORD-LEN       PIC S9(9) COMP-5 SYNC
                                                 VALUE 0.
       01  BAQ-RESPONSE-INFO.
         03 BAQ-RESPONSE-INFO-COMP-LEVEL PIC S9(9) COMP-5 SYNC VALUE 0.
         03 BAQ-STUB-NAME                PIC X(8).
         03 BAQ-RETURN-CODE              PIC S9(9) COMP-5 SYNC.
            88 BAQ-SUCCESS                 VALUE 0.
            88 BAQ-ERROR-IN-API            VALUE 1.
            88 BAQ-ERROR-IN-ZCEE           VALUE 2.
            88 BAQ-ERROR-IN-STUB           VALUE 3.
         03 BAQ-STATUS-CODE              PIC S9(9) COMP-5 SYNC.
         03 BAQ-STATUS-MESSAGE           PIC X(1024).
         03 BAQ-STATUS-MESSAGE-LEN       PIC S9(9) COMP-5 SYNC.

      *----------------------------------------------------------------*
      *  Work definitions for CALL communcation STUBE
      *----------------------------------------------------------------*

       01 BAQ-REQUEST-PTR USAGE POINTER.
       01 BAQ-REQUEST-LEN PIC S9(9) COMP-5 SYNC.
       01 BAQ-RESPONSE-PTR USAGE POINTER.
       01 BAQ-RESPONSE-LEN PIC S9(9) COMP-5 SYNC.
       77 COMM-STUB-PGM-NAME PIC X(8) VALUE 'BAQCSTUB'.

      *----------------------------------------------------------------*
      *    L I N K A G E   S E C T I O N
      *----------------------------------------------------------------*

       LINKAGE SECTION.
       01 DFHCOMMAREA             PIC X(256) VALUE SPACES.

      *----------------------------------------------------------------*
      *P R O C E D U R E S
      *----------------------------------------------------------------*

       PROCEDURE DIVISION.

      *----------------------------------------------------------------*
       MAINLINE SECTION.
      *----------------------------------------------------------------*

           exec cics receive into   (wk-receive)
                             length (wk-receive-length)
           end-exec

           move wk-screen-str to itemid in request.

           SET BAQ-REQUEST-PTR TO ADDRESS OF REQUEST.
           MOVE LENGTH OF REQUEST TO BAQ-REQUEST-LEN.
           SET BAQ-RESPONSE-PTR TO ADDRESS OF RESPONSE.
           MOVE LENGTH OF RESPONSE TO BAQ-RESPONSE-LEN.

           CALL COMM-STUB-PGM-NAME USING
           BY REFERENCE API-INFO
           BY REFERENCE BAQ-REQUEST-INFO
           BY REFERENCE BAQ-REQUEST-PTR
           BY REFERENCE BAQ-REQUEST-LEN
           BY REFERENCE BAQ-RESPONSE-INFO
           BY REFERENCE BAQ-RESPONSE-PTR
           BY REFERENCE BAQ-RESPONSE-LEN.

           exec cics send
                     from(response)
                     erase
                     length(length of response)
           end-exec

           exec cics return
           end-exec

           EXIT
           .
